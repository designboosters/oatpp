# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
- job: publish
  displayName: 'Publish headers'
  continueOnError: false
  pool:
    vmImage: 'ubuntu-latest'
  workspace:
    clean: all
  steps:
    - task: CopyFiles@2
      displayName: "Copy Headers"
      inputs:
        SourceFolder: "src/oatpp/"
        Contents: "**/?(*.h|*.hpp)"
        TargetFolder: $(Build.ArtifactStagingDirectory)/includes/
    - task: PublishBuildArtifacts@1
      displayName: "Publish Artifacts"
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: Artifacts
- job: ubuntu
  displayName: 'Build - Ubuntu 20.04 - With Memory Pool'
  continueOnError: false
  pool:
    vmImage: 'Ubuntu 20.04'
  workspace:
    clean: all
  steps:
    - script: |
        mkdir build
      displayName: "Create build folder"
    - script: |
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make
      displayName: 'Build'
      workingDirectory: build
    - task: CopyFiles@2
      displayName: "Copy Library"
      inputs:
        SourceFolder: "build/src/"
        Contents: "liboatpp.a"
        TargetFolder: $(Build.ArtifactStagingDirectory)/lib/linux/
    - task: PublishBuildArtifacts@1
      displayName: "Publish Artifacts"
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: Artifacts
- job: windows
  displayName: 'Build - Windows - With Memory Pool'
  continueOnError: false
  pool:
    vmImage: 'windows-latest'
  workspace:
    clean: all
  steps:
    - script: |
        MD build
      displayName: 'Create build folder'
    - script: |
        cmake ..
        cmake --build .
      displayName: 'Build'
      workingDirectory: build
    - task: CopyFiles@2
      displayName: "Copy Library"
      inputs:
        SourceFolder: "build/src/"
        Contents: "oatpp.lib"
        TargetFolder: $(Build.ArtifactStagingDirectory)/lib/windows/
    - task: PublishBuildArtifacts@1
      displayName: "Publish Artifacts"
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: Artifacts
